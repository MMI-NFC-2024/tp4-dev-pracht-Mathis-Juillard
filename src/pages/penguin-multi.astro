---
import Layout from "../layouts/Layout.astro";
---
<Layout title="TP4 — Penguins (filtres multiples)">
  <h2 style="margin:0 0 .75rem">Penguins — filtres espèce / île / sexe</h2>

  <div style="display:flex;gap:.8rem;flex-wrap:wrap;margin:.25rem 0 1rem">
    <label>Espèce
      <select id="species" style="margin-left:.35rem">
        <option value="">Toutes</option>
        <option value="Adelie">Adelie</option>
        <option value="Chinstrap">Chinstrap</option>
        <option value="Gentoo">Gentoo</option>
      </select>
    </label>
    <label>Île
      <select id="island" style="margin-left:.35rem">
        <option value="">Toutes</option>
        <option value="Biscoe">Biscoe</option>
        <option value="Dream">Dream</option>
        <option value="Torgersen">Torgersen</option>
      </select>
    </label>
    <label>Sexe
      <select id="sex" style="margin-left:.35rem">
        <option value="">Tous</option>
        <option value="MALE">MALE</option>
        <option value="FEMALE">FEMALE</option>
      </select>
    </label>
  </div>

  <div id="vis"></div>

  <script>
    import * as Plot from "@observablehq/plot";
    import penguinsRaw from "../assets/penguins.json";

    const base = penguinsRaw
      .filter(d => d.culmen_length_mm != null && d.culmen_depth_mm != null)
      .map(d => ({
        ...d,
        culmen_length_mm: +d.culmen_length_mm,
        culmen_depth_mm: +d.culmen_depth_mm
      }));

    const root = document.querySelector("#vis");
    const selS = document.querySelector("#species");
    const selI = document.querySelector("#island");
    const selX = document.querySelector("#sex");

    function renderPlot() {
      const s = selS.value, i = selI.value, x = selX.value;
      const rows = base.filter(d =>
        (s ? d.species === s : true) &&
        (i ? d.island  === i : true) &&
        (x ? d.sex     === x : true)
      );

      root.innerHTML = "";
      const plot = Plot.plot({
        width: 920,
        height: 500,
        marks: [
          Plot.dot(rows, {
            x: "culmen_length_mm",
            y: "culmen_depth_mm",
            stroke: "species",
            fill: "species",
            r: 3.5,
            tip: true
          })
        ],
        x: { label: "Culmen length (mm)", grid: true },
        y: { label: "Culmen depth (mm)", grid: true },
        color: { legend: true }
      });
      root.append(plot);
    }

    [selS, selI, selX].forEach(el => el.addEventListener("change", renderPlot));
    renderPlot();
  </script>
</Layout>
